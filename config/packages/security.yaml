security:
    encoders:
        App\Entity\Etablissement: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity: { class: App\Entity\Etablissement, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
              # Le nom de la route de la page de connexion
              check_path: security_login
              # Le nom de la route où se trouve le formulaire de connexion
              # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
              # il sera redirigé sur cette page
              login_path: security_login
              # Securisation des formulaires
              csrf_token_generator: security.csrf.token_manager
              # La page par defaut apres une connexion reussie
              default_target_path: index

            logout:
              # La route où se trouve le process de deconnexion
              path: security_logout
              # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
              target: security_login

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN}
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/benevoles, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/, role: ROLE_USER }
